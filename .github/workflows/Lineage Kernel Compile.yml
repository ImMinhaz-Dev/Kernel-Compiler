name: Lineage Kernel Compiling

on:
  workflow_dispatch:

env:
  BUILD_NAME: compiler...
  ARCH: arm64
  SUBARCH: arm64
  KBUILD_BUILD_USER: MINHAZ
  KBUILD_BUILD_HOST: POTATO
  KERNEL_SOURCE_REPO: https://github.com/ImMinhaz-Dev/kernel_xiaomi_sm6250.git
  KERNEL_BRANCH: lineage-22.2
  ANYKERNEL3_REPO: https://github.com/ImMinhaz-Dev/anykernel3.git
  ANYKERNEL3_BRANCH: master
  CCACHE_DIR: ~/.ccache

jobs:
  build_kernel:
    name: ${{ env.BUILD_NAME }}
    runs-on: ubuntu-23.10 # Using ubuntu-latest for simplicity, but you specified 23.10, so a custom runner or a newer official image might be needed if 23.10 isn't directly available. For now, this will default to a recent Ubuntu.
    
    steps:
    - name: Checkout Kernel Source
      uses: actions/checkout@v4
      with:
        repository: ${{ env.KERNEL_SOURCE_REPO }}
        ref: ${{ env.KERNEL_BRANCH }}
        path: kernel_source

    - name: Checkout AnyKernel3
      uses: actions/checkout@v4
      with:
        repository: ${{ env.ANYKERNEL3_REPO }}
        ref: ${{ env.ANYKERNEL3_BRANCH }}
        path: anykernel3

    - name: Install Dependencies
      run: |
        sudo apt update
        sudo apt install -y bc bison build-essential binutils ccache curl flex g++-multilib gcc-multilib git git-lfs gnupg gperf imagemagick protobuf-compiler python-is-python3 python3-protobuf openjdk-11-jdk lib32readline-dev lib32z1-dev libdw-dev libelf-dev lz4 libsdl1.2-dev libssl-dev libxml2 libxml2-utils lzop pngcrush rsync schedtool squashfs-tools xsltproc zip zlib1g-dev

    - name: Install ncurses5 for Ubuntu 23.10
      run: |
        wget https://archive.ubuntu.com/ubuntu/pool/universe/n/ncurses/libtinfo5_6.3-2_amd64.deb
        sudo dpkg -i libtinfo5_6.3-2_amd64.deb
        rm -f libtinfo5_6.3-2_amd64.deb

        wget https://archive.ubuntu.com/ubuntu/pool/universe/n/ncurses/libncurses5_6.3-2_amd64.deb
        sudo dpkg -i libncurses5_6.3-2_amd64.deb
        rm -f libncurses5_6.3-2_amd64.deb

    - name: Configure CCACHE
      run: |
        echo "USE_CCACHE=1" >> $GITHUB_ENV
        echo "CCACHE_EXEC=$(which ccache)" >> $GITHUB_ENV
        mkdir -p ${{ env.CCACHE_DIR }}
        echo "CCACHE_DIR=${{ env.CCACHE_DIR }}" >> $GITHUB_ENV # Ensure CCACHE_DIR is set for subsequent steps
        ccache -M 20G # Set ccache size to 20GB (adjust as needed)

    - name: Prepare Kernel Source
      working-directory: kernel_source
      run: |
        make mrproper
        make clean
        mkdir -p out

    - name: Generate .config
      working-directory: kernel_source
      run: |
        make O=out ARCH=${{ env.ARCH }} SUBARCH=${{ env.SUBARCH }} vendor/xiaomi/miatoll_defconfig

    - name: Compile Kernel
      working-directory: kernel_source
      run: |
        export KBUILD_BUILD_USER="${{ env.KBUILD_BUILD_USER }}"
        export KBUILD_BUILD_HOST="${{ env.KBUILD_BUILD_HOST }}"
        make O=out ARCH=${{ env.ARCH }} SUBARCH=${{ env.SUBARCH }} -j$(nproc --all)

    - name: Customize AnyKernel3 and Copy Files
      working-directory: ${{ github.workspace }}
      run: |
        # Customize AnyKernel.sh
        sed -i 's/kernel.compiler=.*/kernel.compiler=LineageOS-Kernel-Compiler-by-MINHAZ/g' anykernel3/anykernel.sh

        # Copy kernel images to AnyKernel3
        cp kernel_source/out/arch/${{ env.ARCH }}/boot/Image.gz anykernel3/
        cp kernel_source/out/dtbo.img anykernel3/
        cp kernel_source/out/dtb.img anykernel3/

        # Copy modules if they exist (adjust path if different)
        # Check if modules directory exists and copy contents
        if [ -d "kernel_source/out/lib/modules" ]; then
          mkdir -p anykernel3/modules/system/lib/modules
          cp -r kernel_source/out/lib/modules/* anykernel3/modules/system/lib/modules/
        fi

    - name: Create Flashable Zip
      working-directory: anykernel3
      run: |
        zip -r9 ${{ github.workspace }}/Lineage_Kernel_Curtana_MINHAZ.zip * -x .git README.md

    - name: Upload Flashable Zip as Artifact
      uses: actions/upload-artifact@v4
      with:
        name: Lineage-Kernel-Curtana
        path: Lineage_Kernel_Curtana_MINHAZ.zip
